
1) 코드를 클린하게 짜기. clean code -> 있어야할 곳에 있어야할 것이 있어야함

컴퓨터 사이언스

하드웨어
cpu(연산장치) - 기본적인 연산을 맡음, 컴퓨터가 얼마나 빠르냐의 척도
렘(메모리) - 프로그램이 실행되는 공간. 많으면 많을수록 좋다,단점 - 컴퓨터가 꺼지면 사라짐
ssd(부메모리) - 옛날에는 하드디스크 or 플로피 디스크, 물리적 구동이 필요없기때문에 하드보다 빠르다. 전자기기적 움직임 데이를 저장하는곳
GPU - 그래픽 처리장치(구), 그래픽 연산에 트화된 장치 -> 단순한 대량 작업(cpu는 모든연산가능)에 특화 되어있음. -> 인공지능,빅데이터,블록체인
키보드 - 입력장치
모니터 - 출력장치

컴퓨터와 소통하는방법
high level language -> assembly language -> binary file(기계어)
이진수 - 반도체의 특징. 전기가 흐를때 1 안흐를때 0

운영체제
시스템을 관리하고 응용프로그램을 실행하는 프로그램
- 윈도루, 맥os, 리눅스
응용프로ㅡ램 - 브라우저, 엑셀

윈도루,맥 - 데스크탑
리눅스 - 서버용도로 사용(서버비가 무료), 연구, 오픈소스,안드로이드에서 사용 

프레임워크 - 특정 일을 수행할 때 필요한 기능들의 모음 ex)tensorflow
라이브러리 - 기능들의 모음
API - 애플리케이션들간의 데이터를 주고받는 인터페이스 규약
클라우드 - 웹에서 프로그램을 실행하는 방식 ex) 아마존 aws, 팀즈, 구글 워크스페이스
장점 - 데이터 공유와 협업에 편리함, 리소스,유지보수 관리에 대한 부담감이 적음, IAAS,PAAS,SAAS

프로그래밍 언어
why Python - 데이터 처리에 유리함 
자바스크립트 - 웹페이지 인터레션 기능을 제작하기 위한 언어

컴파일러
하이레벨 언어를 기계어로 변환해주는 소프트웨어
javascript, python 은 스크립트 언어로 바로 실행 가능함

자료구조
프로그래밍을 할때 사용하는 데이터와 기능들을 고려했을떄 어떤 형태의 구조를 사용하는것이 좋을까에 대한 고민

알고리즘
프르램이 실행될 때 필요한 공간과 메모리
RAM은 비싼 리소스 -> 어떻게 덜 사용 할 수 있을까 -> 가장 최근에 사용했던 데이터를 RAM에 우선 올릴까(cache)

페어 프로그래밍
한개의 키보드로 두명의 개발자가 같이 개발하는 기술
두명이 ㅡ 프로그램에 대한 이해도가 증가함 -> 생산성 증가


CS 과제

1. 컴퓨터의 구성요소는?
CPU,RAM,SSD,키보드,모니터,GPU 등등
2. GPU에 대해서 설명하세요
GPU는 그래픽 처리장치로 대량의 단순 계산을 빠르게 할수 있으며 core가 많다. 즉 인공지능, 데이터분석 등에 필요한 하드웨어이다.
3.기계어란?
컴퓨터가 이해 할 수있는 언어. 숫자로만 이루어진 언어. high-level언어를 컴파일 하면 기계어가 된다.
4. 컴파일러란 무엇인가요?
컴파일러는 high-level언어를 기계어로 변환해주는 소프트웨어이며, Java나 C같은 언어에 사용된다.
5. 오픈소스 프로젝트 3개를 나열하세요.
git,GCP,Ms azure -> 앵귤러 js, 쿠버네티스, 머티리얼 디자인 아이콘
6. 프레임워크와 라이브러리에 대해 설명하세요.
프레임워크는 어떤 특정한 일(기능)을 할때에 필요한 기능들의 모음, 라이브러리는 기능의 모음
7. API란?
애플리케이션들간의 데이터를 주고받는 인터페이스 규약. 가령 리모콘의 볼륨조절 버튼도 일종의 api이다. 
open API를 통해서 책 이름,가격, 출판사를 알수도 있는만큼 사용하는 범위가 넓다(인턴때의 경험)
8.데이터 분석을 진행하려고 합니다. 어떤 프로그래밍 언어를 사용해야 할까요? 그이유는?
Python 파이썬은 데이터 분석할때에 유리하다. 많은 라이브러리를 사용 할 수 있다.
9.TDD에 대해서 설명하세요
Test Driven Development로써 테스트를 먼저 해봄으로써 개발의 리스크를 줄일 수 있다. 또한 고객의 요구조건이 바뀔 수 있을경우 사용된다.
10. 캐시에 대해서 설명하세요
자주 사용되는 값을 미리 복사해놓는 임시장소이다. 레지스터보단 접근이 느리자만 메모리보다는 접근이 매우빠르다.
local cache와 global cahce가 있는데 전자는 local에서만 작동하는 캐시로 빠르다. 후자는 네트워크를 사용하는 캐시로 느리다. 전자는 local의 리소스만 이용하므로 서버간의 데이터
이동이 느리지만 후자는 캐시 서버가 별도로 존재하기 때문에 서버간의 데이터 이동이 빠르다.
11. 클라우드에 대해서 설명하세요.
웹에서 프로그램을 실행하는 방식. 아마존 aws, 팀즈, 구글 워크스페이스 가 예이며, 클라우드에서 작업을 하면, 유지보수가 쉽고, 개인이 부담할 비용이 적어진다. 
12. SAAS의 예를 들어보세요.
SAP의 엔터프라이즈 리소스 계획(ERP) 소프트웨어(red-hat)
서비스 제공자(service provider가 모든 기능을 제공하기에 사용자는 하드웨어나 네트워크에 투자해야한다.
13.페어프로그래밍의 장점은?
페어프로그래밍은 한키보드 한 컴퓨터로 두명의 개발자가 같이 개발하는 과정으로, 프로그램에 대한 이해도가 두명이 상의 하여 개발하기때문에 더 높아진다. 그러므로 생산성이 높아진다.
14. Git이란 무엇인가
깃은 여러명의 개발자가 트정 프로젝트를 협업하여 개발하면서 버전을 관리 할 수 있는 시스템이다. 또한 깃은 open source로 남에ㅔ 자신의 코드를 보여줄 수 있으며 다른사람의
코드도 볼 수 있다. 
15.게임을 개발하고 싶습니다. 어떤 프로그래밍 언어를 사용해야 할까요? 그 이유는?
C++ 왜냐하면 게임은 플레이어가 움직일 수 있는 캐릭터가 있는데 이 캐릭터는 객체이므로 객체지향프로그래밍이 필요하다. 즉 c++이나 C#을 사용해야한다.
16.HTML페이지를 만들려고 합니다. 어떤 프로그래밍 언어를 사용해야 할까요?
Javascript 왜냐하면 자바스크립트는 유일한 어플리케이션 인터랙션 언어이기때문이다. 
17.웹 프레임워크 세가지를 작성하세요.
파이썬의 django, node.js java의 spring
18. 딥러닝 프레임워크 3가지를 작성하세요.
tensorflow, keras, pytorch
19.데이터베이스란?
구조화된 데이터의 모음, 데이터의 조직화 된 모음이며 DBMS에 의해 제어 되며 응용 어플리케이셔놔 dbms를 통틀어 데이터베이스 시스템, 데이터베이스라고 한다. 
20.애자일 방법론
고객의 요구에 그때 그때 반영하여, 훗날의 배드엔딩을 막는다. 팀워크를 중시하며 개발자 개인의 의견보다 고객들의 의견을 우선시한다. 


전공 시간때 배웠던것을 복습하는 시간이 되었다. 다시 한번 기억나게 해주는 수업이었다. 
